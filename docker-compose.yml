version: "3.8"

services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: marybot_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: botuser
      POSTGRES_PASSWORD: botpass
      POSTGRES_DB: marybot
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"  # Usar porta 5433 no host para evitar conflitos
    networks:
      - marybot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U botuser -d marybot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Bot Discord
  bot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: marybot
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: "postgresql://botuser:botpass@db:5432/marybot?schema=public"
      DISCORD_TOKEN: "${DISCORD_TOKEN}"
    volumes:
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./prisma:/app/prisma:ro
    networks:
      - marybot_network
    command: ["npm", "start"]

  # Prisma Studio (opcional - para desenvolvimento)
  prisma-studio:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: marybot_studio
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://botuser:botpass@db:5432/marybot?schema=public"
    volumes:
      - ./prisma:/app/prisma:ro
    ports:
      - "5555:5555"
    networks:
      - marybot_network
    command: ["npx", "prisma", "studio", "--hostname", "0.0.0.0"]
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local

networks:
  marybot_network:
    driver: bridge