# =============================================================================
# MARYBOT - Configura√ß√£o de Ambiente para Microservi√ßos
# =============================================================================

# ü§ñ DISCORD BOT CONFIGURATION
DISCORD_TOKEN=your-discord-bot-token-here
CLIENT_ID=your-application-client-id
GUILD_ID=your-test-guild-id-for-development

# üóÑÔ∏è DATABASE CONFIGURATION
DATABASE_URL="postgresql://botuser:botpass@localhost:5400/marybot"

# Para desenvolvimento local com Docker:
# DATABASE_URL="postgresql://botuser:botpass@localhost:5400/marybot"

# Para produ√ß√£o com Docker Compose (containers se comunicam internamente):
# DATABASE_URL="postgresql://botuser:botpass@db:5432/marybot"

# Para servidor remoto:
# DATABASE_URL="postgresql://botuser:botpass@homelab.op:5400/marybot"

# üîê SECURITY & JWT
JWT_SECRET="your-super-secret-jwt-key-change-this-in-production"
SERVICE_TOKEN="backend-service-token-change-this"

# üåê API SERVICE CONFIGURATION (Porta 3001)
API_PORT=3001
ALLOWED_ORIGINS="http://localhost:3000,http://localhost:3002,http://localhost:3003,http://backend:3002,http://admin-panel:3003"

# üîÑ BACKEND SERVICE CONFIGURATION (Porta 3002)
BACKEND_PORT=3002
API_SERVICE_URL="http://localhost:3001"

# Para Docker Compose (comunica√ß√£o interna):
# API_SERVICE_URL="http://api:3001"

# ü§ñ BOT SERVICE CONFIGURATION
BACKEND_SERVICE_URL="http://localhost:3002"
USE_WEBSOCKET=true
ENABLE_FALLBACK=true

# Para Docker Compose:
# BACKEND_SERVICE_URL="http://backend:3002"

# üéõÔ∏è ADMIN PANEL CONFIGURATION (Porta 3003)
NEXTAUTH_URL="http://localhost:3003"
ENABLE_REALTIME=true

# Para Docker Compose:
# API_SERVICE_URL="http://api:3001"
# BACKEND_SERVICE_URL="http://backend:3002"

# üê≥ DOCKER CONFIGURATION
COMPOSE_PROJECT_NAME=marybot

# üìä MONITORING & LOGGING
LOG_LEVEL=info
ENABLE_METRICS=true

# üéÆ GAME CONFIGURATION
GACHA_SINGLE_COST=50
GACHA_MULTI_COST=450
DAILY_REWARD_COINS=100
DAILY_REWARD_XP=50

# üåü FEATURE FLAGS
ENABLE_QUIZ=true
ENABLE_GACHA=true
ENABLE_ECONOMY=true
ENABLE_ANIME_COMMANDS=true

# üìà PERFORMANCE
MAX_CONCURRENT_REQUESTS=100
REQUEST_TIMEOUT=30000
CONNECTION_POOL_SIZE=10

# =============================================================================
# INSTRU√á√ïES DE CONFIGURA√á√ÉO:
# 
# 1. Copie este arquivo para .env:
#    cp .env.example .env
#
# 2. Configure suas credenciais do Discord:
#    - V√° para https://discord.com/developers/applications
#    - Crie um novo Application
#    - V√° para "Bot" e copie o Token
#    - V√° para "General Information" e copie o Application ID (CLIENT_ID)
#    - Para GUILD_ID, ative o modo desenvolvedor no Discord e copie o ID do servidor
#
# 3. Para banco de dados:
#    - Desenvolvimento: use a configura√ß√£o padr√£o com Docker
#    - Produ√ß√£o: ajuste para seu servidor PostgreSQL
#
# 4. Gere chaves seguras:
#    - JWT_SECRET: use um gerador de senhas forte (32+ caracteres)
#    - SERVICE_TOKEN: token para comunica√ß√£o entre servi√ßos
#
# 5. Ajuste URLs conforme seu ambiente:
#    - Desenvolvimento local: mantenha localhost
#    - Docker Compose: use nomes dos servi√ßos (api, backend, etc.)
#    - Produ√ß√£o: use IPs/dom√≠nios reais
# =============================================================================
